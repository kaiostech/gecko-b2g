# Compiler
export CC=$HOME/.mozbuild/clang/bin/clang
export CXX=$HOME/.mozbuild/clang/bin/clang++
export LLVMCONFIG=$HOME/.mozbuild/clang/bin/llvm-config
export LLVM_CONFIG=$HOME/.mozbuild/clang/bin/llvm-config
export AR=$HOME/.mozbuild/clang/bin/llvm-ar
export NM=$HOME/.mozbuild/clang/bin/llvm-nm
export RANLIB=$HOME/.mozbuild/clang/bin/llvm-ranlib
#export CBINDGEN=$HOME/.mozbuild/cbindgen/cbindgen

# Build B2G
ac_add_options --enable-application=b2g
ac_add_options --target=$TARGET_ARCH-linux-$ARCH_ABI
ac_add_options --enable-linker=lld

# Disable a bunch of non critical stuff
ac_add_options --disable-crashreporter
ac_add_options --disable-printing
ac_add_options --disable-updater
ac_add_options --disable-cranelift
# Disable telemetry
ac_add_options MOZ_TELEMETRY_REPORTING=

if [ "${B2G_DEBUG:-0}" != "0" ]; then
  ac_add_options --enable-debug
else
  if [ "${DISABLE_LTO:-0}" = "0" ]; then
    # Enable Rust <-> C++ LTO
    ac_add_options --enable-lto
    export MOZ_LTO=cross
  fi
fi

# Optimize the build
ac_add_options --disable-profiling
ac_add_options --enable-small-chunk-size

# With the following Android SDK and NDK:
ac_add_options --with-android-ndk=$ANDROID_NDK
ac_add_options --with-android-version=$PLATFORM_VERSION

# Use sccache
ac_add_options --with-ccache=sccache

# Auto-clobber
mk_add_options AUTOCLOBBER=1

# Gonk-specific stuff
ac_add_options --with-gonk-gfx
ac_add_options --with-gonk="$GONK_PATH"

# Customize the objdir.
if [ -f "$GECKO_OBJDIR" ]; then
mk_add_options MOZ_OBJDIR="$GECKO_OBJDIR"
fi

# Pretend to be an official build to be in a release configuration.
export MOZILLA_OFFICIAL=1
# elf hack fails with a "Segments overlap" error.
ac_add_options --disable-elf-hack

# TARGET_BUILD_VARIANT stuff
if [ "$TARGET_ARCH_VARIANT" = "$TARGET_ARCH" ] ||
   [ "$TARGET_ARCH_VARIANT" = "generic" ]; then
TARGET_ARCH_VARIANT=""
else
TARGET_ARCH_VARIANT="_$TARGET_ARCH_VARIANT"
fi

if [ "$TARGET_CPU_VARIANT" = "$TARGET_ARCH" ] ||
   [ "$TARGET_CPU_VARIANT" = "generic" ]; then
TARGET_CPU_VARIANT=""
else
TARGET_CPU_VARIANT="_$TARGET_CPU_VARIANT"
fi

ac_add_options --with-target-arch-name="$TARGET_ARCH$TARGET_ARCH_VARIANT$TARGET_CPU_VARIANT"
ac_add_options --target-build-variant="$TARGET_BUILD_VARIANT"
if [ "$TARGET_BUILD_VARIANT" != "user" ] ; then
ENABLE_MARIONETTE=1
ENABLE_TESTS=1
fi

if [ "$TARGET_BUILD_VARIANT" != "user" ] ; then
  # Bug 12048 enables TaskTracer, since some device branches do not have
  # engineering builds, we should enable profiler and tasktracer for
  # both engineering builds and userdebug builds.
  ac_add_options --enable-profiling
  ac_add_options --enable-tasktracer
fi

ac_add_options --enable-b2g-camera

ac_add_options --with-gnss1.0-so="$SYS_LIB/android.hardware.gnss@1.0.so"
if [ $PLATFORM_VERSION -ge 29 ]; then
  ac_add_options --with-gnss1.1-so="$SYS_LIB/android.hardware.gnss@1.1.so"
  ac_add_options --with-gnss2.0-so="$SYS_LIB/android.hardware.gnss@2.0.so"
fi

ac_add_options --with-dnsresolver-so="$SYS_LIB/dnsresolver_aidl_interface-V2-cpp.so"
ac_add_options --with-netd-event-so="$SYS_LIB/netd_aidl_interface-V2-cpp.so"
ac_add_options --with-netd-aidl-so="$SYS_LIB/netd_event_listener_interface-V1-cpp.so"
ac_add_options --with-radio-so="$SYS_LIB/android.hardware.radio@1.0.so"
ac_add_options --with-vibrator-so="$SYS_LIB/android.hardware.vibrator@1.0.so"

ac_add_options --with-wifi-1.0-so="$SYS_LIB/android.hardware.wifi@1.0.so"
ac_add_options --with-wifi-1.1-so="$SYS_LIB/android.hardware.wifi@1.1.so"
ac_add_options --with-wifi-1.2-so="$SYS_LIB/android.hardware.wifi@1.2.so"
ac_add_options --with-wifi-1.3-so="$SYS_LIB/android.hardware.wifi@1.3.so"
ac_add_options --with-hostapd-1.0-so="$SYS_LIB/android.hardware.wifi.hostapd@1.0.so"
ac_add_options --with-hostapd-1.1-so="$SYS_LIB/android.hardware.wifi.hostapd@1.1.so"
ac_add_options --with-supplicant-1.0-so="$SYS_LIB/android.hardware.wifi.supplicant@1.0.so"
ac_add_options --with-supplicant-1.1-so="$SYS_LIB/android.hardware.wifi.supplicant@1.1.so"
ac_add_options --with-supplicant-1.2-so="$SYS_LIB/android.hardware.wifi.supplicant@1.2.so"
ac_add_options --with-wificond-so="$SYS_LIB/libwificond_ipc_shared.so"
ac_add_options --with-binder-b2g-connectivity-so="$SYS_LIB/binder_b2g_connectivity_interface-cpp.so"

ac_add_options --enable-forkserver

ac_add_options --enable-b2g-ril
ac_add_options --enable-b2g-fm

if [ "$TARGET_ARCH" = "x86_64" ]; then
  ac_add_options --enable-wasm-simd
fi;
